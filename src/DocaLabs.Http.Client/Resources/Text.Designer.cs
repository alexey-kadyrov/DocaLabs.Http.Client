//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DocaLabs.Http.Client.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Text {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Text() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DocaLabs.Http.Client.Resources.Text", typeof(Text).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Base type argument {0} does not match the original argument {1}..
        /// </summary>
        internal static string base_type_does_not_match {
            get {
                return ResourceManager.GetString("base_type_does_not_match", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The binder {0} must implement at least one oth the next interfaces: IMutator, IUrlQueryComposer, IHeaderMapper, or IRequestStreamWriter..
        /// </summary>
        internal static string binder_must_implement {
            get {
                return ResourceManager.GetString("binder_must_implement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot convert from type {0} to type {1}..
        /// </summary>
        internal static string cannot_convert_from_0_to_1 {
            get {
                return ResourceManager.GetString("cannot_convert_from_0_to_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot figure out how to deserialize web response..
        /// </summary>
        internal static string cannot_figure_out_how_to_deserialize {
            get {
                return ResourceManager.GetString("cannot_figure_out_how_to_deserialize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compression format {0} is not supported..
        /// </summary>
        internal static string compression_format_is_not_suppoerted {
            get {
                return ResourceManager.GetString("compression_format_is_not_suppoerted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration file {0} is not found..
        /// </summary>
        internal static string configuration_file_0_not_found {
            get {
                return ResourceManager.GetString("configuration_file_0_not_found", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected that {0} will be Image or Bitmap classes..
        /// </summary>
        internal static string expected_retsult_to_be_image_or_bitmap_classes {
            get {
                return ResourceManager.GetString("expected_retsult_to_be_image_or_bitmap_classes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to create Url {0}..
        /// </summary>
        internal static string failed_create_url {
            get {
                return ResourceManager.GetString("failed_create_url", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to execute request to {0} ({1}).
        /// </summary>
        internal static string failed_execute_request {
            get {
                return ResourceManager.GetString("failed_execute_request", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If the base class {0} is generic it must have two generic arguments..
        /// </summary>
        internal static string if_base_class_generic_it_must_have_two_parameters {
            get {
                return ResourceManager.GetString("if_base_class_generic_it_must_have_two_parameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input argument can be only of string or Guid type..
        /// </summary>
        internal static string input_argument_can_be_only_string_or_guid {
            get {
                return ResourceManager.GetString("input_argument_can_be_only_string_or_guid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interface {0} cannot be generic type definition..
        /// </summary>
        internal static string interface_cannot_be_generic_type_defienition {
            get {
                return ResourceManager.GetString("interface_cannot_be_generic_type_defienition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The method {0} in {1} must have no more than one parameter..
        /// </summary>
        internal static string method_must_have_no_more_than_one_argument {
            get {
                return ResourceManager.GetString("method_must_have_no_more_than_one_argument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type {0} must be interface..
        /// </summary>
        internal static string must_be_interface {
            get {
                return ResourceManager.GetString("must_be_interface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The base type {0} must have method: {1} Execute({2} query)..
        /// </summary>
        internal static string must_have_execute_method {
            get {
                return ResourceManager.GetString("must_have_execute_method", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type {0} must have only one method..
        /// </summary>
        internal static string must_have_only_one_method {
            get {
                return ResourceManager.GetString("must_have_only_one_method", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The base type {0} must have constructor with parameters: (Uri serviceUrl, string configurationName, {1} retryStrategy) or (Uri serviceUrl, string configurationName)..
        /// </summary>
        internal static string must_implement_constructor {
            get {
                return ResourceManager.GetString("must_implement_constructor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Response stream is null..
        /// </summary>
        internal static string null_response_stream {
            get {
                return ResourceManager.GetString("null_response_stream", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path mapping is strictly positional, if there is an empty value all other values after that must be empty as well. This values {0} violate this rule..
        /// </summary>
        internal static string path_mapping_is_strictly_positioonal {
            get {
                return ResourceManager.GetString("path_mapping_is_strictly_positioonal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Does not support indexers..
        /// </summary>
        internal static string property_cannot_be_indexer {
            get {
                return ResourceManager.GetString("property_cannot_be_indexer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type of property {0} in {1} must be simple..
        /// </summary>
        internal static string property_must_be_simple {
            get {
                return ResourceManager.GetString("property_must_be_simple", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Service URL is not defined in the constaructor paramter or is not in the configuration file..
        /// </summary>
        internal static string service_url_is_not_defined {
            get {
                return ResourceManager.GetString("service_url_is_not_defined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type {0} cannot be converted to byte array..
        /// </summary>
        internal static string type_0_cannot_be_converted_to_byte_array {
            get {
                return ResourceManager.GetString("type_0_cannot_be_converted_to_byte_array", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown underlying enum type {0}..
        /// </summary>
        internal static string unknown_underlying_enum_type_0 {
            get {
                return ResourceManager.GetString("unknown_underlying_enum_type_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value {0} is not defined for enum {1}..
        /// </summary>
        internal static string value_0_is_not_defined_for_enum_1 {
            get {
                return ResourceManager.GetString("value_0_is_not_defined_for_enum_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to execute the service query, will try again. Attempt {0}..
        /// </summary>
        internal static string will_try_again {
            get {
                return ResourceManager.GetString("will_try_again", resourceCulture);
            }
        }
    }
}
