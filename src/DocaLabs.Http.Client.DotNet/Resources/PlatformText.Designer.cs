//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DocaLabs.Http.Client.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class PlatformText {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal PlatformText() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DocaLabs.Http.Client.Resources.PlatformText", typeof(PlatformText).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Base type argument {0} does not match the original argument {1}..
        /// </summary>
        internal static string base_type_does_not_match {
            get {
                return ResourceManager.GetString("base_type_does_not_match", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot mix network credential with other types for {0}..
        /// </summary>
        internal static string cannot_mix_network_credential_with_other {
            get {
                return ResourceManager.GetString("cannot_mix_network_credential_with_other", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compression format {0} is not supported..
        /// </summary>
        internal static string compression_format_is_not_suppoerted {
            get {
                return ResourceManager.GetString("compression_format_is_not_suppoerted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If the base class {0} is generic it must have two generic arguments..
        /// </summary>
        internal static string if_base_class_generic_it_must_have_two_parameters {
            get {
                return ResourceManager.GetString("if_base_class_generic_it_must_have_two_parameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interface {0} cannot be generic type definition..
        /// </summary>
        internal static string interface_cannot_be_generic_type_definition {
            get {
                return ResourceManager.GetString("interface_cannot_be_generic_type_definition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type {0} must be interface..
        /// </summary>
        internal static string must_be_interface {
            get {
                return ResourceManager.GetString("must_be_interface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The base type {0} must have method: {1} Execute({2} query)..
        /// </summary>
        internal static string must_have_execute_method {
            get {
                return ResourceManager.GetString("must_have_execute_method", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type {0} must have only one method..
        /// </summary>
        internal static string must_have_only_one_method {
            get {
                return ResourceManager.GetString("must_have_only_one_method", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The base type {0} must have constructor with parameters: (Uri serviceUrl, string configurationName, {1} retryStrategy) or (Uri serviceUrl, string configurationName)..
        /// </summary>
        internal static string must_implement_constructor {
            get {
                return ResourceManager.GetString("must_implement_constructor", resourceCulture);
            }
        }
    }
}
